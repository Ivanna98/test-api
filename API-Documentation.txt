Signup route


Post: get request data, search in a collection of users a user with a given email. If we have user with given email, return error: "User already exist", else add new user to db. The password is stored in the database hashed. 

cURL request example: 

curl --location --request POST 'localhost:3002/signup' \
--header 'Content-Type: application/x-www-form-urlencoded' \
--data-urlencode 'name=Name' \
--data-urlencode 'email=email@mail.ru' \
--data-urlencode 'password=password'





Login route


Post: get request data, search in a collection of users a user with a given email. If we don`t have user with given email, return error: "No account found", else compare with bcrypt password in db user and given password. If password right, return token, else return error: "Password or email is incorrect"

cURL request example:

curl --location --request POST 'localhost:3002/login' \
--header 'Content-Type: application/x-www-form-urlencoded' \
--data-urlencode 'email=email@mail.ru' \
--data-urlencode 'password=password'





Articles route


Post: it`s protected route. Get request data and save in db.

cURL request example: 

curl --location --request POST 'localhost:3002/articles' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlMmZlYjQyZTQxZmM1NDAwOGQ5ZWU5NyIsIm5hbWUiOiJOYW1lIiwiaWF0IjoxNTgwMTk5NTgwLCJleHAiOjE1ODA0NTg3ODB9.AkahrAanBjOxR3Gv4GaJEGjz0dB3T_Qgp7PLcoEJm2g' \
--data-raw '{
	"title": "title",
	"content": "content",
	"tags":["one", "two"],
	"category":"category"
}'




Put: it`s protected route. Get request data, find in collection articles object with given id. Rewrite this article with given data.

cURL request example:

curl --location --request PUT 'localhost:3002/articles/5e2feeeae41fc54008d9ee98' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlMmZlYjQyZTQxZmM1NDAwOGQ5ZWU5NyIsIm5hbWUiOiJOYW1lIiwiaWF0IjoxNTgwMTk5NTgwLCJleHAiOjE1ODA0NTg3ODB9.AkahrAanBjOxR3Gv4GaJEGjz0dB3T_Qgp7PLcoEJm2g' \
--data-raw '{
	"title": "newTitle",
	"content": "newContent",
	"tags":["one", "two"],
	"category":"category"
}'
 




Get: it`s public route. Find in collection articles all object and return them.

cURL request example:

curl --location --request GET 'localhost:3002/articles' \





Get/id: it`s public route. Find in collection article with given id and return it with information about author this article.

cURL request example:

curl --location --request GET 'localhost:3002/articles/5e2feeeae41fc54008d9ee98'





Delete: it`s protected route. Find in collection article with given id and remove it. Then return message: "Delete successful"

cURL request example:

curl --location --request DELETE 'localhost:3002/articles/5e2feeeae41fc54008d9ee98' \
--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlMmZlYjQyZTQxZmM1NDAwOGQ5ZWU5NyIsIm5hbWUiOiJOYW1lIiwiaWF0IjoxNTgwMTk5NTgwLCJleHAiOjE1ODA0NTg3ODB9.AkahrAanBjOxR3Gv4GaJEGjz0dB3T_Qgp7PLcoEJm2g'


